{"version":3,"file":"react-flickity-component.umd.js","sources":["../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport imagesloaded from 'imagesloaded';\nimport PropTypes from 'prop-types';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flickityReady: false,\n      flickityCreated: false,\n      cellCount: 0,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const cellCount = React.Children.count(props.children);\n    if (cellCount !== state.cellCount)\n      return { flickityReady: false, cellCount };\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.flkty) return;\n    const {\n      children,\n      options: { draggable, initialIndex },\n      reloadOnUpdate,\n      disableImagesLoaded,\n    } = this.props;\n    const { flickityReady } = this.state;\n    if (reloadOnUpdate || (!prevState.flickityReady && flickityReady)) {\n      const isActive = this.flkty.isActive;\n      this.flkty.deactivate();\n      this.flkty.selectedIndex = initialIndex || 0;\n      this.flkty.options.draggable =\n        draggable === undefined\n          ? children\n            ? children.length > 1\n            : false\n          : draggable;\n      if (isActive) this.flkty.activate();\n      if (!disableImagesLoaded && this.carousel) {\n        imagesloaded(this.carousel, () => {\n          this.flkty.reloadCells();\n        });\n      }\n    } else {\n      this.flkty.reloadCells();\n    }\n  }\n\n  async componentDidMount() {\n    if (!canUseDOM || !this.carousel) return null;\n    const Flickity = (await import('flickity')).default;\n    const { flickityRef, options } = this.props;\n    this.flkty = new Flickity(this.carousel, options);\n    if (flickityRef) flickityRef(this.flkty);\n    if (this.props.static) {\n      this.setReady();\n    } else {\n      this.setState({ flickityCreated: true });\n    }\n  }\n\n  setReady() {\n    if (this.state.flickityReady) return;\n    const setFlickityToReady = () => this.setState({ flickityReady: true });\n    if (this.props.disableImagesLoaded) setFlickityToReady();\n    else imagesloaded(this.carousel, setFlickityToReady);\n  }\n\n  renderPortal() {\n    if (!this.carousel) return null;\n    const mountNode = this.carousel.querySelector('.flickity-slider');\n    if (mountNode) {\n      const element = createPortal(this.props.children, mountNode);\n      setTimeout(() => this.setReady(), 0);\n      return element;\n    }\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: (c) => {\n          this.carousel = c;\n        },\n      },\n      this.props.static ? this.props.children : this.renderPortal()\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  children: PropTypes.array,\n  className: PropTypes.string,\n  disableImagesLoaded: PropTypes.bool,\n  elementType: PropTypes.string,\n  flickityRef: PropTypes.func,\n  options: PropTypes.object,\n  reloadOnUpdate: PropTypes.bool,\n  static: PropTypes.bool,\n};\n\nFlickityComponent.defaultProps = {\n  className: '',\n  disableImagesLoaded: false,\n  elementType: 'div',\n  options: {},\n  reloadOnUpdate: false,\n  static: false,\n};\n\nexport default FlickityComponent;\n"],"names":["canUseDOM","FlickityComponent","Component","props","state","cellCount","React","prevProps","prevState","children","draggable","initialIndex","reloadOnUpdate","disableImagesLoaded","flickityReady","isActive","imagesloaded","Flickity","flickityRef","options","setFlickityToReady","mountNode","element","createPortal","c","PropTypes"],"mappings":"gaAKA,MAAMA,EAAY,CAAC,EACjB,OAAO,OAAW,KAClB,OAAO,UACP,OAAO,SAAS,eAGlB,MAAMC,UAA0BC,EAAAA,SAAU,CACxC,YAAYC,EAAO,CACjB,MAAMA,CAAK,EAEX,KAAK,MAAQ,CACX,cAAe,GACf,gBAAiB,GACjB,UAAW,CACjB,EAEI,KAAK,SAAW,KAChB,KAAK,MAAQ,IACd,CAED,OAAO,yBAAyBA,EAAOC,EAAO,CAC5C,MAAMC,EAAYC,EAAM,SAAS,MAAMH,EAAM,QAAQ,EACrD,OAAIE,IAAcD,EAAM,UACf,CAAE,cAAe,GAAO,UAAAC,GAC1B,IACR,CAED,mBAAmBE,EAAWC,EAAW,CACvC,GAAI,CAAC,KAAK,MAAO,OACjB,KAAM,CACJ,SAAAC,EACA,QAAS,CAAE,UAAAC,EAAW,aAAAC,CAAc,EACpC,eAAAC,EACA,oBAAAC,CACN,EAAQ,KAAK,MACH,CAAE,cAAAC,CAAa,EAAK,KAAK,MAC/B,GAAIF,GAAmB,CAACJ,EAAU,eAAiBM,EAAgB,CACjE,MAAMC,EAAW,KAAK,MAAM,SAC5B,KAAK,MAAM,aACX,KAAK,MAAM,cAAgBJ,GAAgB,EAC3C,KAAK,MAAM,QAAQ,UACjBD,IAAc,OACVD,EACEA,EAAS,OAAS,EAClB,GACFC,EACFK,GAAU,KAAK,MAAM,SAAQ,EAC7B,CAACF,GAAuB,KAAK,UAC/BG,EAAa,KAAK,SAAU,IAAM,CAChC,KAAK,MAAM,aACrB,CAAS,CAET,MACM,KAAK,MAAM,aAEd,CAED,MAAM,mBAAoB,CACxB,GAAI,CAAChB,GAAa,CAAC,KAAK,SAAU,OAAO,KACzC,MAAMiB,GAAY,KAAM,QAAO,aAAa,QACtC,CAAE,YAAAC,EAAa,QAAAC,GAAY,KAAK,MACtC,KAAK,MAAQ,IAAIF,EAAS,KAAK,SAAUE,CAAO,EAC5CD,GAAaA,EAAY,KAAK,KAAK,EACnC,KAAK,MAAM,OACb,KAAK,SAAQ,EAEb,KAAK,SAAS,CAAE,gBAAiB,EAAM,CAAA,CAE1C,CAED,UAAW,CACT,GAAI,KAAK,MAAM,cAAe,OAC9B,MAAME,EAAqB,IAAM,KAAK,SAAS,CAAE,cAAe,EAAI,CAAE,EAClE,KAAK,MAAM,oBAAqBA,EAAkB,EACjDJ,EAAa,KAAK,SAAUI,CAAkB,CACpD,CAED,cAAe,CACb,GAAI,CAAC,KAAK,SAAU,OAAO,KAC3B,MAAMC,EAAY,KAAK,SAAS,cAAc,kBAAkB,EAChE,GAAIA,EAAW,CACb,MAAMC,EAAUC,EAAAA,aAAa,KAAK,MAAM,SAAUF,CAAS,EAC3D,kBAAW,IAAM,KAAK,SAAU,EAAE,CAAC,EAC5BC,CACR,CACF,CAED,QAAS,CACP,OAAOhB,EAAM,cACX,KAAK,MAAM,YACX,CACE,UAAW,KAAK,MAAM,UACtB,IAAMkB,GAAM,CACV,KAAK,SAAWA,CACjB,CACF,EACD,KAAK,MAAM,OAAS,KAAK,MAAM,SAAW,KAAK,aAAc,CACnE,CACG,CACH,CAEA,OAAAvB,EAAkB,UAAY,CAC5B,SAAUwB,EAAU,MACpB,UAAWA,EAAU,OACrB,oBAAqBA,EAAU,KAC/B,YAAaA,EAAU,OACvB,YAAaA,EAAU,KACvB,QAASA,EAAU,OACnB,eAAgBA,EAAU,KAC1B,OAAQA,EAAU,IACpB,EAEAxB,EAAkB,aAAe,CAC/B,UAAW,GACX,oBAAqB,GACrB,YAAa,MACb,QAAS,CAAE,EACX,eAAgB,GAChB,OAAQ,EACV"}