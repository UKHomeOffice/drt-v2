{"version":3,"file":"react-flickity-component.es.js","sources":["../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport imagesloaded from 'imagesloaded';\nimport PropTypes from 'prop-types';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flickityReady: false,\n      flickityCreated: false,\n      cellCount: 0,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const cellCount = React.Children.count(props.children);\n    if (cellCount !== state.cellCount)\n      return { flickityReady: false, cellCount };\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.flkty) return;\n    const {\n      children,\n      options: { draggable, initialIndex },\n      reloadOnUpdate,\n      disableImagesLoaded,\n    } = this.props;\n    const { flickityReady } = this.state;\n    if (reloadOnUpdate || (!prevState.flickityReady && flickityReady)) {\n      const isActive = this.flkty.isActive;\n      this.flkty.deactivate();\n      this.flkty.selectedIndex = initialIndex || 0;\n      this.flkty.options.draggable =\n        draggable === undefined\n          ? children\n            ? children.length > 1\n            : false\n          : draggable;\n      if (isActive) this.flkty.activate();\n      if (!disableImagesLoaded && this.carousel) {\n        imagesloaded(this.carousel, () => {\n          this.flkty.reloadCells();\n        });\n      }\n    } else {\n      this.flkty.reloadCells();\n    }\n  }\n\n  async componentDidMount() {\n    if (!canUseDOM || !this.carousel) return null;\n    const Flickity = (await import('flickity')).default;\n    const { flickityRef, options } = this.props;\n    this.flkty = new Flickity(this.carousel, options);\n    if (flickityRef) flickityRef(this.flkty);\n    if (this.props.static) {\n      this.setReady();\n    } else {\n      this.setState({ flickityCreated: true });\n    }\n  }\n\n  setReady() {\n    if (this.state.flickityReady) return;\n    const setFlickityToReady = () => this.setState({ flickityReady: true });\n    if (this.props.disableImagesLoaded) setFlickityToReady();\n    else imagesloaded(this.carousel, setFlickityToReady);\n  }\n\n  renderPortal() {\n    if (!this.carousel) return null;\n    const mountNode = this.carousel.querySelector('.flickity-slider');\n    if (mountNode) {\n      const element = createPortal(this.props.children, mountNode);\n      setTimeout(() => this.setReady(), 0);\n      return element;\n    }\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: (c) => {\n          this.carousel = c;\n        },\n      },\n      this.props.static ? this.props.children : this.renderPortal()\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  children: PropTypes.array,\n  className: PropTypes.string,\n  disableImagesLoaded: PropTypes.bool,\n  elementType: PropTypes.string,\n  flickityRef: PropTypes.func,\n  options: PropTypes.object,\n  reloadOnUpdate: PropTypes.bool,\n  static: PropTypes.bool,\n};\n\nFlickityComponent.defaultProps = {\n  className: '',\n  disableImagesLoaded: false,\n  elementType: 'div',\n  options: {},\n  reloadOnUpdate: false,\n  static: false,\n};\n\nexport default FlickityComponent;\n"],"names":["canUseDOM","FlickityComponent","Component","props","state","cellCount","React","prevProps","prevState","children","draggable","initialIndex","reloadOnUpdate","disableImagesLoaded","flickityReady","isActive","imagesloaded","Flickity","flickityRef","options","setFlickityToReady","mountNode","element","createPortal","c","PropTypes"],"mappings":"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"}