{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","languages/ro-RO.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","numbro","roRO","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","languageTag","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","currency","symbol","position","currencyFormat","thousandSeparated","totalLength","spaceSeparated","average","formats","fourDigits","fullWithTwoDecimals","output","mantissa","fullWithTwoDecimalsNoCurrency","fullWithNoDecimals"],"mappings":"CAAA,SAAAA,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,IAAAK,IAAAA,EAAA,oBAAAC,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,SAAAL,EAAAK,YAAAC,KAAAX,KAAA,CAAA,WAAA,OAAA,SAAAY,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAjB,EAAA,IAAAsB,MAAA,uBAAAL,EAAA,KAAA,MAAAjB,EAAAuB,KAAA,mBAAAvB,EAAA,IAAAwB,EAAAV,EAAAG,IAAAhB,YAAAY,EAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAhB,QAAA,IAAA,IAAAoB,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAW,GAAA,SAAAP,EAAAlB,EAAAD,gBCMAC,EAAOD,SACH2B,YAAa,QACbC,YACIC,UAAW,IACXC,QAAS,KAEbC,eACIC,SAAU,MACVC,QAAS,MACTC,QAAS,MACTC,SAAU,OAEdC,QAAS,WACL,MAAO,KAEXC,UACIC,OAAQ,OACRC,SAAU,UACVjB,KAAM,OAEVkB,gBACIC,mBAAmB,EACnBC,YAAa,EACbC,gBAAgB,EAChBC,SAAS,GAEbC,SACIC,YACIJ,YAAa,EACbC,gBAAgB,EAChBC,SAAS,GAEbG,qBACIC,OAAQ,WACRC,SAAU,EACVN,gBAAgB,EAChBF,mBAAmB,GAEvBS,+BACID,SAAU,EACVR,mBAAmB,GAEvBU,oBACIH,OAAQ,WACRL,gBAAgB,EAChBF,mBAAmB,EACnBQ,SAAU,kBDpDtB","file":"ro-RO.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n * numeral.js language configuration\n * language : Romanian\n * author : Andrei Alecu https://github.com/andreialecu\n */\n\nmodule.exports = {\n    languageTag: \"ro-RO\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"mii\",\n        million: \"mil\",\n        billion: \"mld\",\n        trillion: \"bln\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \" lei\",\n        position: \"postfix\",\n        code: \"RON\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n"]}