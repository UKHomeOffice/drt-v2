---
kind: pipeline
name: DRT-V2
type: kubernetes

platform:
  os: linux
  arch: amd64

steps:
  - name: sonar-scanner
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/sonar-scanner:v3.0.1
    when:
      branch:
        - ${DRONE_BRANCH}
      event:
        - push

  - name: ecr-login
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/dind-awscli:19.03.12-dind-1.18.55
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 340268328991.dkr.ecr.eu-west-2.amazonaws.com
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
    when:
      event:
        - push

  - name: publish-cypress
    image: plugins/ecr
    environment:
      AWS_REGION: eu-west-2
    settings:
      access_key:
        from_secret: cypress_aws_access_key_id
      secret_key:
        from_secret: cypress_aws_secret_access_key
      repo: drt/drt-v2-cypress
      registry: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
      dockerfile: cy-drt-dockfile
      tags:
        - latest
        - ${DRONE_BUILD_NUMBER}
    when:
      event:
        - push

  - name: build
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/scala-sbt-nodejs
    commands:
      - /root/entrypoint.sh
      - sbt --error compile docker:stage
    environment:
      ARTIFACTORY_PASSWORD:
        from_secret: ARTIFACTORY_PASSWORD
      ARTIFACTORY_USERNAME: drt_ci
      ENV_LOG_LEVEL: ERROR
      KEYTOOL_PASSWORD:
        from_secret: KEYTOOL_PASSWORD
    when:
      event:
        - push

  - name: unit-test
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/scala-sbt-nodejs
    commands:
      - /root/entrypoint.sh
      - sbt --error test
    environment:
      ARTIFACTORY_PASSWORD:
        from_secret: ARTIFACTORY_PASSWORD
      ARTIFACTORY_USERNAME: drt_ci
      ENV_LOG_LEVEL: ERROR
      KEYTOOL_PASSWORD:
        from_secret: KEYTOOL_PASSWORD
    when:
      event:
        - push
    depends_on:
      - build

  - name: publish-drt
    image: plugins/ecr
    environment:
      AWS_REGION: eu-west-2
    settings:
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      repo: drt/drt-v2
      registry: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
      tags:
        - B${DRONE_BUILD_NUMBER}
    when:
      event:
        - push
    depends_on:
      - build

  - name: e2e-tests
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    environment:
      AWS_REGION: eu-west-2
      PLAY:
        from_secret: play
    commands:
      - docker run -m 5g -d --name $${DRONE_COMMIT_SHA} -e ENABLE_STATSD=false -e CONTACT_EMAIL=support@test.com -e OOH_PHONE=012345 -e KEY_CLOAK_URL="https://sso-dev.notprod.homeoffice.gov.uk/auth/admin/realms/drt-notprod" -e JAVA_OPTS="-Xmx4g -Dconfig.resource=application-inmemory.conf" -e USE_API_PAX_NOS=true -e ADJUST_EGATES_USE_BY_U12S=true -e PORT_CODE="test" -e ENV="test" -e FORECAST_MAX_DAYS=2 -e DISPLAY_RED_LIST_INFO=false -e BASE_DOMAIN=drt-test.homeoffice.gov.uk 340268328991.dkr.ecr.eu-west-2.amazonaws.com/drt/drt-v2:B${DRONE_BUILD_NUMBER} $${PLAY}
      - docker run --net=container:$${DRONE_COMMIT_SHA} -e CYPRESS_baseUrl="http://localhost:9000" 340268328991.dkr.ecr.eu-west-2.amazonaws.com/drt/drt-v2-cypress:${DRONE_BUILD_NUMBER} /bin/bash -c "npm run test"
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
    when:
      event:
        - push
    depends_on:
      - publish-drt
      - publish-cypress

  - name: slack_notification
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: devs
      template: "*{{repo.name}}: _{{build.status}}_*\nCompleted build *{{build.number}}* after *{{since build.started}}* on *{{build.branch}}*\n{{build.link}}\n"
      username: drone
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    when:
      status:
        - success
        - failure
      event:
        - push
    depends_on:
      - e2e-tests

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

volumes:
  - name: dockerclientconfig
    temp: { }
...
