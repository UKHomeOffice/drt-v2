slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    connectionPool = "HikariCP"
    driver = "org.postgresql.Driver"
    host = "localhost"
    host = ${?POSTGRES_HOST}
    user = ""${portcode}""
    user = ${?POSTGRES_USER}
    password = ""${portcode}""
    password = ${?POSTGRES_PASSWORD}
    numThreads = 2
    numThreads = ${?AKKADB_THREADS}
    maxConnections = 2
    maxConnections = ${?AKKADB_MAX_CONNECTIONS}
    url = "jdbc:postgresql://"${slick.db.host}":5432/"${portcode}"?reWriteBatchedInserts=true&ssl="${use-pg-ssl}"&sslmode="${use-pg-ssl-mode}
  }
}

jdbc-journal {
  dao = "akka.persistence.jdbc.journal.dao.legacy.ByteArrayJournalDao"
  slick = ${slick}
  recovery-event-timeout = 240s
  recovery-event-timeout = ${?RECOVERY_TIMEOUT}

  circuit-breaker {
    max-failures = 5
    call-timeout = 120s
    call-timeout = ${?SNAPSHOT_CALL_TIMEOUT}
    reset-timeout = 60s
  }
}
# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  dao = "akka.persistence.jdbc.snapshot.dao.legacy.ByteArraySnapshotDao"
  slick = ${slick}

  circuit-breaker {
    max-failures = 5
    call-timeout = 120s
    call-timeout = ${?SNAPSHOT_CALL_TIMEOUT}
    reset-timeout = 60s
  }
}
# the akka-persistence-query provider in use
jdbc-read-journal {
  dao = "akka.persistence.jdbc.query.dao.legacy.ByteArrayReadJournalDao"
  slick = ${slick}
  refresh-interval = "3s"
  refresh-interval = ${?READ_JOURNAL_INTERVAL}

  max-buffer-size = "100"
  max-buffer-size = ${?MAX_JDBC_BUFFER_SIZE}
}
